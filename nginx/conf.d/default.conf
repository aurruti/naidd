# Debug - duckdns HTTP configuration
server {
    listen 80;
    server_name naidd.duckdns.org;
    
    # Enable error logging
    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    # Redirect HTTP to HTTPS (remember to uncomment this!)
    # location / {
    #     return 301 https://naidd.duckdns.org$request_uri;
    # }

    # For now, just proxy to the website
    location / {
        proxy_pass http://website:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# DuckDNS HTTPS configuration
server {
    listen 443 ssl;
    server_name naidd.duckdns.org;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/naidd.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/naidd.duckdns.org/privkey.pem;

    
    # SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Proxy configuration
    location / {
        proxy_pass http://website:80;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# # Redirect HTTP to HTTPS
# server {
#     listen 80;
#     server_name aurruti.cat www.aurruti.cat;

#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     return 301 https://www.aurruti.cat$request_uri;
# }


# # Handle HTTPS traffic
# server {
#     listen 443 ssl;
#     server_name aurruti.cat www.aurruti.cat;

#     # SSL certificate paths
#     ssl_certificate /etc/letsencrypt/live/aurruti.cat/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/aurruti.cat/privkey.pem;

#     # Redirect root domain to www
#     if ($host = aurruti.cat) {
#         return 301 https://www.aurruti.cat$request_uri;
#     }

#     location / {
#         proxy_pass http://website;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }
# }